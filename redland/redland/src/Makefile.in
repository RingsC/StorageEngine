# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- Mode: Makefile -*-
#
# Makefile.am - top level automake file for Redland
#
# Copyright (C) 2000-2009, David Beckett http://www.dajobe.org/
# Copyright (C) 2000-2006, University of Bristol, UK http://www.bristol.ac.uk/
# 
# This package is Free Software and part of Redland http://librdf.org/
# 
# It is licensed under the following three licenses as alternatives:
#   1. GNU Lesser General Public License (LGPL) V2.1 or any newer version
#   2. GNU General Public License (GPL) V2 or any newer version
#   3. Apache License, V2.0 or any newer version
# 
# You may not use this file except in compliance with at least one of
# the above three licenses.
# 
# See LICENSE.html or LICENSE.txt at the top of this package for the
# complete terms and further detail along with the license texts for
# the licenses in COPYING.LIB, COPYING and LICENSE-2.0.txt respectively.
# 
# 



VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@MEMCMP_TRUE@am__append_1 = memcmp.c
@STORAGE_FILE_TRUE@am__append_2 = rdf_storage_file.c
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@am__append_3 = librdf_storage_tstore.la
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@am__append_4 = librdf_storage_mysql.la
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@am__append_5 = librdf_storage_sqlite.la
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@am__append_6 = librdf_storage_postgresql.la
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@am__append_7 = librdf_storage_virtuoso.la 
@MODULAR_LIBRDF_FALSE@@STORAGE_TSTORE_TRUE@am__append_8 = rdf_storage_tstore.c
@MODULAR_LIBRDF_FALSE@@STORAGE_MYSQL_TRUE@am__append_9 = rdf_storage_mysql.c
@MODULAR_LIBRDF_FALSE@@STORAGE_SQLITE_TRUE@am__append_10 = rdf_storage_sqlite.c
@MODULAR_LIBRDF_FALSE@@STORAGE_POSTGRESQL_TRUE@am__append_11 = rdf_storage_postgresql.c
@MODULAR_LIBRDF_FALSE@@STORAGE_VIRTUOSO_TRUE@am__append_12 = rdf_storage_virtuoso.c rdf_query_virtuoso.c rdf_storage_virtuoso_internal.h
@STORAGE_MYSQL_TRUE@am__append_13 = mysql-v1.ttl mysql-v2.ttl
@MODULAR_LIBRDF_TRUE@am__append_14 = -DREDLAND_MODULE_PATH="\""@REDLAND_MODULE_PATH@"\""
subdir = src
DIST_COMMON = $(include_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/librdf.h.in $(srcdir)/rdf_config.h.in \
	$(srcdir)/redland.spec.in $(srcdir)/win32_rdf_config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = rdf_config.h
CONFIG_CLEAN_FILES = librdf.h redland.spec win32_rdf_config.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(plugindir)" \
	"$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(plugin_LTLIBRARIES)
am__librdf_la_SOURCES_DIST = rdf_init.c rdf_raptor.c rdf_uri.c \
	rdf_digest.c rdf_hash.c rdf_hash_cursor.c rdf_hash_memory.c \
	rdf_model.c rdf_model_storage.c rdf_iterator.c rdf_concepts.c \
	rdf_list.c rdf_storage.c rdf_storage_sql.c rdf_stream.c \
	rdf_parser.c rdf_parser_raptor.c rdf_heuristics.c rdf_files.c \
	rdf_utf8.c rdf_query.c rdf_query_results.c rdf_query_rasqal.c \
	rdf_serializer.c rdf_serializer_raptor.c rdf_log.c \
	rdf_node_common.c rdf_statement_common.c rdf_node.c \
	rdf_statement.c redland.h rdf_internal.h rdf_init.h rdf_uri.h \
	rdf_node.h rdf_statement.h rdf_concepts.h rdf_digest.h \
	rdf_hash.h rdf_types.h rdf_model.h rdf_iterator.h rdf_list.h \
	rdf_storage.h rdf_stream.h rdf_parser.h rdf_heuristics.h \
	rdf_files.h rdf_utf8.h rdf_query.h rdf_serializer.h rdf_log.h \
	rdf_concepts_internal.h rdf_digest_internal.h \
	rdf_hash_internal.h rdf_init_internal.h \
	rdf_iterator_internal.h rdf_list_internal.h rdf_log_internal.h \
	rdf_model_internal.h rdf_node_internal.h rdf_parser_internal.h \
	rdf_query_internal.h rdf_raptor_internal.h \
	rdf_serializer_internal.h rdf_statement_internal.h \
	rdf_storage_internal.h rdf_stream_internal.h \
	rdf_uri_internal.h memcmp.c rdf_storage_list.c \
	rdf_storage_hashes.c rdf_storage_trees.c rdf_storage_file.c \
	rdf_storage_tstore.c rdf_storage_mysql.c rdf_storage_sqlite.c \
	rdf_storage_postgresql.c rdf_storage_virtuoso.c \
	rdf_query_virtuoso.c rdf_storage_virtuoso_internal.h
@MEMCMP_TRUE@am__objects_1 = memcmp.lo
@STORAGE_FILE_TRUE@am__objects_2 = rdf_storage_file.lo
@MODULAR_LIBRDF_FALSE@@STORAGE_TSTORE_TRUE@am__objects_3 = rdf_storage_tstore.lo
@MODULAR_LIBRDF_FALSE@@STORAGE_MYSQL_TRUE@am__objects_4 = rdf_storage_mysql.lo
@MODULAR_LIBRDF_FALSE@@STORAGE_SQLITE_TRUE@am__objects_5 = rdf_storage_sqlite.lo
@MODULAR_LIBRDF_FALSE@@STORAGE_POSTGRESQL_TRUE@am__objects_6 = rdf_storage_postgresql.lo
@MODULAR_LIBRDF_FALSE@@STORAGE_VIRTUOSO_TRUE@am__objects_7 = rdf_storage_virtuoso.lo \
@MODULAR_LIBRDF_FALSE@@STORAGE_VIRTUOSO_TRUE@	rdf_query_virtuoso.lo
am_librdf_la_OBJECTS = rdf_init.lo rdf_raptor.lo rdf_uri.lo \
	rdf_digest.lo rdf_hash.lo rdf_hash_cursor.lo \
	rdf_hash_memory.lo rdf_model.lo rdf_model_storage.lo \
	rdf_iterator.lo rdf_concepts.lo rdf_list.lo rdf_storage.lo \
	rdf_storage_sql.lo rdf_stream.lo rdf_parser.lo \
	rdf_parser_raptor.lo rdf_heuristics.lo rdf_files.lo \
	rdf_utf8.lo rdf_query.lo rdf_query_results.lo \
	rdf_query_rasqal.lo rdf_serializer.lo rdf_serializer_raptor.lo \
	rdf_log.lo rdf_node_common.lo rdf_statement_common.lo \
	rdf_node.lo rdf_statement.lo $(am__objects_1) \
	rdf_storage_list.lo rdf_storage_hashes.lo rdf_storage_trees.lo \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7)
librdf_la_OBJECTS = $(am_librdf_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
librdf_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(librdf_la_LDFLAGS) $(LDFLAGS) -o $@
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@librdf_storage_mysql_la_DEPENDENCIES =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@	librdf.la
am__librdf_storage_mysql_la_SOURCES_DIST = rdf_storage_mysql.c
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@am_librdf_storage_mysql_la_OBJECTS = librdf_storage_mysql_la-rdf_storage_mysql.lo
librdf_storage_mysql_la_OBJECTS =  \
	$(am_librdf_storage_mysql_la_OBJECTS)
librdf_storage_mysql_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(librdf_storage_mysql_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@am_librdf_storage_mysql_la_rpath =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@	-rpath $(plugindir)
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@librdf_storage_postgresql_la_DEPENDENCIES =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@	librdf.la
am__librdf_storage_postgresql_la_SOURCES_DIST =  \
	rdf_storage_postgresql.c
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@am_librdf_storage_postgresql_la_OBJECTS = librdf_storage_postgresql_la-rdf_storage_postgresql.lo
librdf_storage_postgresql_la_OBJECTS =  \
	$(am_librdf_storage_postgresql_la_OBJECTS)
librdf_storage_postgresql_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(librdf_storage_postgresql_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@am_librdf_storage_postgresql_la_rpath =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@	-rpath \
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@	$(plugindir)
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@librdf_storage_sqlite_la_DEPENDENCIES =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@	librdf.la
am__librdf_storage_sqlite_la_SOURCES_DIST = rdf_storage_sqlite.c
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@am_librdf_storage_sqlite_la_OBJECTS = librdf_storage_sqlite_la-rdf_storage_sqlite.lo
librdf_storage_sqlite_la_OBJECTS =  \
	$(am_librdf_storage_sqlite_la_OBJECTS)
librdf_storage_sqlite_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(librdf_storage_sqlite_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@am_librdf_storage_sqlite_la_rpath =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@	-rpath $(plugindir)
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@librdf_storage_tstore_la_DEPENDENCIES =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@	librdf.la
am__librdf_storage_tstore_la_SOURCES_DIST = rdf_storage_tstore.c
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@am_librdf_storage_tstore_la_OBJECTS = librdf_storage_tstore_la-rdf_storage_tstore.lo
librdf_storage_tstore_la_OBJECTS =  \
	$(am_librdf_storage_tstore_la_OBJECTS)
librdf_storage_tstore_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(librdf_storage_tstore_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@am_librdf_storage_tstore_la_rpath =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@	-rpath $(plugindir)
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@librdf_storage_virtuoso_la_DEPENDENCIES =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@	librdf.la
am__librdf_storage_virtuoso_la_SOURCES_DIST = rdf_storage_virtuoso.c \
	rdf_query_virtuoso.c rdf_storage_virtuoso_internal.h
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@am_librdf_storage_virtuoso_la_OBJECTS = librdf_storage_virtuoso_la-rdf_storage_virtuoso.lo \
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@	librdf_storage_virtuoso_la-rdf_query_virtuoso.lo
librdf_storage_virtuoso_la_OBJECTS =  \
	$(am_librdf_storage_virtuoso_la_OBJECTS)
librdf_storage_virtuoso_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(librdf_storage_virtuoso_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@am_librdf_storage_virtuoso_la_rpath =  \
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@	-rpath \
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@	$(plugindir)
am_rdf_storage_sql_test_OBJECTS = rdf_storage_sql_test.$(OBJEXT)
rdf_storage_sql_test_OBJECTS = $(am_rdf_storage_sql_test_OBJECTS)
rdf_storage_sql_test_DEPENDENCIES = librdf.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(librdf_la_SOURCES) $(EXTRA_librdf_la_SOURCES) \
	$(librdf_storage_mysql_la_SOURCES) \
	$(librdf_storage_postgresql_la_SOURCES) \
	$(librdf_storage_sqlite_la_SOURCES) \
	$(librdf_storage_tstore_la_SOURCES) \
	$(librdf_storage_virtuoso_la_SOURCES) \
	$(rdf_storage_sql_test_SOURCES)
DIST_SOURCES = $(am__librdf_la_SOURCES_DIST) \
	$(EXTRA_librdf_la_SOURCES) \
	$(am__librdf_storage_mysql_la_SOURCES_DIST) \
	$(am__librdf_storage_postgresql_la_SOURCES_DIST) \
	$(am__librdf_storage_sqlite_la_SOURCES_DIST) \
	$(am__librdf_storage_tstore_la_SOURCES_DIST) \
	$(am__librdf_storage_virtuoso_la_SOURCES_DIST) \
	$(rdf_storage_sql_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgdata_DATA)
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARGZ_H = @ARGZ_H@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@

# Why is this not in the default makefile?
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIGEST_OBJS = @DIGEST_OBJS@
DIGEST_SRCS = @DIGEST_SRCS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GTKDOC_CHECK = @GTKDOC_CHECK@
GTKDOC_DEPS_CFLAGS = @GTKDOC_DEPS_CFLAGS@
GTKDOC_DEPS_LIBS = @GTKDOC_DEPS_LIBS@
GTKDOC_MKPDF = @GTKDOC_MKPDF@
GTKDOC_REBASE = @GTKDOC_REBASE@
HASH_OBJS = @HASH_OBJS@
HASH_SRCS = @HASH_SRCS@
HAVE_RAPTOR2_API = @HAVE_RAPTOR2_API@
HTML_DIR = @HTML_DIR@
INCLTDL = @INCLTDL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IODBC_CONFIG = @IODBC_CONFIG@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBRDF_CPPFLAGS = @LIBRDF_CPPFLAGS@
LIBRDF_DIRECT_LIBS = @LIBRDF_DIRECT_LIBS@
LIBRDF_EXTERNAL_CPPFLAGS = @LIBRDF_EXTERNAL_CPPFLAGS@
LIBRDF_EXTERNAL_LIBS = @LIBRDF_EXTERNAL_LIBS@
LIBRDF_INTERNAL_CPPFLAGS = @LIBRDF_INTERNAL_CPPFLAGS@
LIBRDF_INTERNAL_DEPS = @LIBRDF_INTERNAL_DEPS@
LIBRDF_INTERNAL_LIBS = @LIBRDF_INTERNAL_LIBS@
LIBRDF_LDFLAGS = @LIBRDF_LDFLAGS@
LIBRDF_LIBTOOLLIBS = @LIBRDF_LIBTOOLLIBS@
LIBRDF_LIBTOOL_VERSION = @LIBRDF_LIBTOOL_VERSION@
LIBRDF_PKGCONFIG_PRIVATE_LIBS = @LIBRDF_PKGCONFIG_PRIVATE_LIBS@
LIBRDF_VERSION_DECIMAL = @LIBRDF_VERSION_DECIMAL@
LIBRDF_VERSION_MAJOR = @LIBRDF_VERSION_MAJOR@
LIBRDF_VERSION_MINOR = @LIBRDF_VERSION_MINOR@
LIBRDF_VERSION_RELEASE = @LIBRDF_VERSION_RELEASE@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MEM = @MEM@
MEM_LIBS = @MEM_LIBS@
MKDIR_P = @MKDIR_P@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_CPPFLAGS = @MYSQL_CPPFLAGS@
MYSQL_LIBS = @MYSQL_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ODBC_CFLAGS = @ODBC_CFLAGS@
ODBC_LIBS = @ODBC_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PG_CONFIG = @PG_CONFIG@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSTGRESQL_CPPFLAGS = @POSTGRESQL_CPPFLAGS@
POSTGRESQL_LIBS = @POSTGRESQL_LIBS@
RANLIB = @RANLIB@
RAPTOR_MIN_VERSION = @RAPTOR_MIN_VERSION@
RASQAL_MAX_VERSION = @RASQAL_MAX_VERSION@
RASQAL_MIN_VERSION = @RASQAL_MIN_VERSION@
RECHO = @RECHO@
RECHO_C = @RECHO_C@
RECHO_N = @RECHO_N@
REDLAND_MODULE_PATH = @REDLAND_MODULE_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE_CPPFLAGS = @SQLITE_CPPFLAGS@
SQLITE_LIBS = @SQLITE_LIBS@
STRIP = @STRIP@

# Use tar, whatever it is called (better be GNU tar though)
TAR = @TAR@
TSTORE_CONFIG = @TSTORE_CONFIG@
TSTORE_CPPFLAGS = @TSTORE_CPPFLAGS@
TSTORE_LIBS = @TSTORE_LIBS@
VERSION = @VERSION@
VIRTUOSO_CPPFLAGS = @VIRTUOSO_CPPFLAGS@
VIRTUOSO_LIBS = @VIRTUOSO_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = win32
lib_LTLIBRARIES = librdf.la
include_HEADERS = redland.h librdf.h \
rdf_init.h \
rdf_raptor.h \
rdf_uri.h rdf_node.h rdf_statement.h rdf_concepts.h \
rdf_model.h \
rdf_iterator.h \
rdf_storage.h \
rdf_storage_module.h \
rdf_stream.h \
rdf_parser.h \
rdf_utf8.h \
rdf_query.h \
rdf_serializer.h \
rdf_log.h \
rdf_digest.h \
rdf_hash.h \
rdf_list.h

noinst_HEADERS = win32_rdf_config.h

# Storages always built-in
librdf_la_SOURCES = rdf_init.c rdf_raptor.c rdf_uri.c rdf_digest.c \
	rdf_hash.c rdf_hash_cursor.c rdf_hash_memory.c rdf_model.c \
	rdf_model_storage.c rdf_iterator.c rdf_concepts.c rdf_list.c \
	rdf_storage.c rdf_storage_sql.c rdf_stream.c rdf_parser.c \
	rdf_parser_raptor.c rdf_heuristics.c rdf_files.c rdf_utf8.c \
	rdf_query.c rdf_query_results.c rdf_query_rasqal.c \
	rdf_serializer.c rdf_serializer_raptor.c rdf_log.c \
	rdf_node_common.c rdf_statement_common.c rdf_node.c \
	rdf_statement.c redland.h rdf_internal.h rdf_init.h rdf_uri.h \
	rdf_node.h rdf_statement.h rdf_concepts.h rdf_digest.h \
	rdf_hash.h rdf_types.h rdf_model.h rdf_iterator.h rdf_list.h \
	rdf_storage.h rdf_stream.h rdf_parser.h rdf_heuristics.h \
	rdf_files.h rdf_utf8.h rdf_query.h rdf_serializer.h rdf_log.h \
	rdf_concepts_internal.h rdf_digest_internal.h \
	rdf_hash_internal.h rdf_init_internal.h \
	rdf_iterator_internal.h rdf_list_internal.h rdf_log_internal.h \
	rdf_model_internal.h rdf_node_internal.h rdf_parser_internal.h \
	rdf_query_internal.h rdf_raptor_internal.h \
	rdf_serializer_internal.h rdf_statement_internal.h \
	rdf_storage_internal.h rdf_stream_internal.h \
	rdf_uri_internal.h $(am__append_1) rdf_storage_list.c \
	rdf_storage_hashes.c rdf_storage_trees.c $(am__append_2) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12)
plugindir = $(libdir)/redland
@MODULAR_LIBRDF_TRUE@plugin_LTLIBRARIES = $(am__append_3) \
@MODULAR_LIBRDF_TRUE@	$(am__append_4) $(am__append_5) \
@MODULAR_LIBRDF_TRUE@	$(am__append_6) $(am__append_7)
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@librdf_storage_tstore_la_SOURCES = rdf_storage_tstore.c
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@librdf_storage_tstore_la_CPPFLAGS = @TSTORE_CPPFLAGS@
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@librdf_storage_tstore_la_LIBADD = @TSTORE_LIBS@ librdf.la
@MODULAR_LIBRDF_TRUE@@STORAGE_TSTORE_TRUE@librdf_storage_tstore_la_LDFLAGS = -module -avoid-version
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@librdf_storage_mysql_la_SOURCES = rdf_storage_mysql.c
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@librdf_storage_mysql_la_CPPFLAGS = @MYSQL_CPPFLAGS@
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@librdf_storage_mysql_la_LIBADD = @MYSQL_LIBS@ librdf.la
@MODULAR_LIBRDF_TRUE@@STORAGE_MYSQL_TRUE@librdf_storage_mysql_la_LDFLAGS = -module -avoid-version
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@librdf_storage_sqlite_la_SOURCES = rdf_storage_sqlite.c
# This extra substitution is to ensure general -I paths appear before
# ones for SQLITE headers.  There is no other way to adjust the
# automake-generated rule to ensure this.
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@librdf_storage_sqlite_la_CPPFLAGS = $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) @SQLITE_CPPFLAGS@
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@librdf_storage_sqlite_la_LIBADD = @SQLITE_LIBS@ librdf.la
@MODULAR_LIBRDF_TRUE@@STORAGE_SQLITE_TRUE@librdf_storage_sqlite_la_LDFLAGS = -module -avoid-version
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@librdf_storage_postgresql_la_SOURCES = rdf_storage_postgresql.c
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@librdf_storage_postgresql_la_CPPFLAGS = @POSTGRESQL_CPPFLAGS@
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@librdf_storage_postgresql_la_LIBADD = @POSTGRESQL_LIBS@ librdf.la
@MODULAR_LIBRDF_TRUE@@STORAGE_POSTGRESQL_TRUE@librdf_storage_postgresql_la_LDFLAGS = -module -avoid-version
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@librdf_storage_virtuoso_la_SOURCES = rdf_storage_virtuoso.c rdf_query_virtuoso.c rdf_storage_virtuoso_internal.h
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@librdf_storage_virtuoso_la_CPPFLAGS = @ODBC_CFLAGS@
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@librdf_storage_virtuoso_la_LIBADD = @ODBC_LIBS@ librdf.la
@MODULAR_LIBRDF_TRUE@@STORAGE_VIRTUOSO_TRUE@librdf_storage_virtuoso_la_LDFLAGS = -module -avoid-version
librdf_la_LIBADD = \
@LTLIBOBJS@ @DIGEST_OBJS@ @HASH_OBJS@ \
@LIBRDF_INTERNAL_LIBS@

librdf_la_DEPENDENCIES = \
@DIGEST_OBJS@ @HASH_OBJS@ \
@LIBRDF_INTERNAL_DEPS@

EXTRA_librdf_la_SOURCES = rdf_hash_bdb.c \
rdf_digest_md5.c rdf_digest_sha1.c \
rdf_parser_raptor.c

EXTRA_DIST = redland.spec redland.spec.in mysql-v1.ttl mysql-v2.ttl
librdf_la_LDFLAGS = -version-info @LIBRDF_LIBTOOL_VERSION@ \
@LIBRDF_LDFLAGS@ @LIBRDF_EXTERNAL_LIBS@

pkgdata_DATA = $(am__append_13)
local_tests = rdf_storage_sql_test$(EXEEXT)
EXTRA_PROGRAMS = $(local_tests)
TESTS = rdf_node_test rdf_digest_test rdf_hash_test rdf_uri_test \
rdf_statement_test rdf_model_test rdf_storage_test rdf_parser_test \
rdf_files_test rdf_heuristics_test rdf_utf8_test rdf_concepts_test \
rdf_query_test rdf_serializer_test rdf_stream_test rdf_iterator_test \
rdf_init_test


# Set the place to find storage modules for testing
TESTS_ENVIRONMENT = REDLAND_MODULE_PATH=$(abs_builddir)/.libs
CLEANFILES = $(TESTS) $(local_tests) test test*.db test.rdf *.plist
AM_CPPFLAGS = @LIBRDF_INTERNAL_CPPFLAGS@ @LIBRDF_CPPFLAGS@ \
	@LIBRDF_EXTERNAL_CPPFLAGS@ -DPKGDATADIR="\"$(pkgdatadir)\""
AM_CFLAGS = @LIBRDF_INTERNAL_CPPFLAGS@ @LIBRDF_CPPFLAGS@ \
	@LIBRDF_EXTERNAL_CPPFLAGS@ $(am__append_14)
ANALYZE = clang
ANALYZE_FLAGS = "--analyze"
# Based on COMPILE target
ANALYZE_COMMAND = $(ANALYZE) \
        $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
        $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) \
        $(ANALYZE_FLAGS)

LOCAL_LIB_DIR = lib
rdf_storage_sql_test_SOURCES = rdf_storage_sql_test.c
rdf_storage_sql_test_LDADD = librdf.la

# rule for building tests in one step
COMPILE_LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
all: rdf_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

rdf_config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/rdf_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/rdf_config.h
$(srcdir)/rdf_config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f rdf_config.h stamp-h1
librdf.h: $(top_builddir)/config.status $(srcdir)/librdf.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
redland.spec: $(top_builddir)/config.status $(srcdir)/redland.spec.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
win32_rdf_config.h: $(top_builddir)/config.status $(srcdir)/win32_rdf_config.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(plugindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(plugindir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
	}

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
librdf.la: $(librdf_la_OBJECTS) $(librdf_la_DEPENDENCIES) $(EXTRA_librdf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librdf_la_LINK) -rpath $(libdir) $(librdf_la_OBJECTS) $(librdf_la_LIBADD) $(LIBS)
librdf_storage_mysql.la: $(librdf_storage_mysql_la_OBJECTS) $(librdf_storage_mysql_la_DEPENDENCIES) $(EXTRA_librdf_storage_mysql_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librdf_storage_mysql_la_LINK) $(am_librdf_storage_mysql_la_rpath) $(librdf_storage_mysql_la_OBJECTS) $(librdf_storage_mysql_la_LIBADD) $(LIBS)
librdf_storage_postgresql.la: $(librdf_storage_postgresql_la_OBJECTS) $(librdf_storage_postgresql_la_DEPENDENCIES) $(EXTRA_librdf_storage_postgresql_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librdf_storage_postgresql_la_LINK) $(am_librdf_storage_postgresql_la_rpath) $(librdf_storage_postgresql_la_OBJECTS) $(librdf_storage_postgresql_la_LIBADD) $(LIBS)
librdf_storage_sqlite.la: $(librdf_storage_sqlite_la_OBJECTS) $(librdf_storage_sqlite_la_DEPENDENCIES) $(EXTRA_librdf_storage_sqlite_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librdf_storage_sqlite_la_LINK) $(am_librdf_storage_sqlite_la_rpath) $(librdf_storage_sqlite_la_OBJECTS) $(librdf_storage_sqlite_la_LIBADD) $(LIBS)
librdf_storage_tstore.la: $(librdf_storage_tstore_la_OBJECTS) $(librdf_storage_tstore_la_DEPENDENCIES) $(EXTRA_librdf_storage_tstore_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librdf_storage_tstore_la_LINK) $(am_librdf_storage_tstore_la_rpath) $(librdf_storage_tstore_la_OBJECTS) $(librdf_storage_tstore_la_LIBADD) $(LIBS)
librdf_storage_virtuoso.la: $(librdf_storage_virtuoso_la_OBJECTS) $(librdf_storage_virtuoso_la_DEPENDENCIES) $(EXTRA_librdf_storage_virtuoso_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(librdf_storage_virtuoso_la_LINK) $(am_librdf_storage_virtuoso_la_rpath) $(librdf_storage_virtuoso_la_OBJECTS) $(librdf_storage_virtuoso_la_LIBADD) $(LIBS)
rdf_storage_sql_test$(EXEEXT): $(rdf_storage_sql_test_OBJECTS) $(rdf_storage_sql_test_DEPENDENCIES) $(EXTRA_rdf_storage_sql_test_DEPENDENCIES) 
	@rm -f rdf_storage_sql_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rdf_storage_sql_test_OBJECTS) $(rdf_storage_sql_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librdf_storage_mysql_la-rdf_storage_mysql.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librdf_storage_postgresql_la-rdf_storage_postgresql.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librdf_storage_sqlite_la-rdf_storage_sqlite.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librdf_storage_tstore_la-rdf_storage_tstore.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librdf_storage_virtuoso_la-rdf_query_virtuoso.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/librdf_storage_virtuoso_la-rdf_storage_virtuoso.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcmp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_concepts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_digest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_digest_md5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_digest_sha1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_files.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_hash_bdb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_hash_cursor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_hash_memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_heuristics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_iterator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_log.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_model.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_model_storage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_node_common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_parser_raptor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_query.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_query_rasqal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_query_results.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_query_virtuoso.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_raptor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_serializer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_serializer_raptor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_statement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_statement_common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_hashes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_mysql.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_postgresql.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_sql.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_sql_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_sqlite.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_trees.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_tstore.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_storage_virtuoso.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_stream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_uri.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf_utf8.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

librdf_storage_mysql_la-rdf_storage_mysql.lo: rdf_storage_mysql.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT librdf_storage_mysql_la-rdf_storage_mysql.lo -MD -MP -MF $(DEPDIR)/librdf_storage_mysql_la-rdf_storage_mysql.Tpo -c -o librdf_storage_mysql_la-rdf_storage_mysql.lo `test -f 'rdf_storage_mysql.c' || echo '$(srcdir)/'`rdf_storage_mysql.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/librdf_storage_mysql_la-rdf_storage_mysql.Tpo $(DEPDIR)/librdf_storage_mysql_la-rdf_storage_mysql.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdf_storage_mysql.c' object='librdf_storage_mysql_la-rdf_storage_mysql.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_mysql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o librdf_storage_mysql_la-rdf_storage_mysql.lo `test -f 'rdf_storage_mysql.c' || echo '$(srcdir)/'`rdf_storage_mysql.c

librdf_storage_postgresql_la-rdf_storage_postgresql.lo: rdf_storage_postgresql.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_postgresql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT librdf_storage_postgresql_la-rdf_storage_postgresql.lo -MD -MP -MF $(DEPDIR)/librdf_storage_postgresql_la-rdf_storage_postgresql.Tpo -c -o librdf_storage_postgresql_la-rdf_storage_postgresql.lo `test -f 'rdf_storage_postgresql.c' || echo '$(srcdir)/'`rdf_storage_postgresql.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/librdf_storage_postgresql_la-rdf_storage_postgresql.Tpo $(DEPDIR)/librdf_storage_postgresql_la-rdf_storage_postgresql.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdf_storage_postgresql.c' object='librdf_storage_postgresql_la-rdf_storage_postgresql.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_postgresql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o librdf_storage_postgresql_la-rdf_storage_postgresql.lo `test -f 'rdf_storage_postgresql.c' || echo '$(srcdir)/'`rdf_storage_postgresql.c

librdf_storage_sqlite_la-rdf_storage_sqlite.lo: rdf_storage_sqlite.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_sqlite_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT librdf_storage_sqlite_la-rdf_storage_sqlite.lo -MD -MP -MF $(DEPDIR)/librdf_storage_sqlite_la-rdf_storage_sqlite.Tpo -c -o librdf_storage_sqlite_la-rdf_storage_sqlite.lo `test -f 'rdf_storage_sqlite.c' || echo '$(srcdir)/'`rdf_storage_sqlite.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/librdf_storage_sqlite_la-rdf_storage_sqlite.Tpo $(DEPDIR)/librdf_storage_sqlite_la-rdf_storage_sqlite.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdf_storage_sqlite.c' object='librdf_storage_sqlite_la-rdf_storage_sqlite.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_sqlite_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o librdf_storage_sqlite_la-rdf_storage_sqlite.lo `test -f 'rdf_storage_sqlite.c' || echo '$(srcdir)/'`rdf_storage_sqlite.c

librdf_storage_tstore_la-rdf_storage_tstore.lo: rdf_storage_tstore.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_tstore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT librdf_storage_tstore_la-rdf_storage_tstore.lo -MD -MP -MF $(DEPDIR)/librdf_storage_tstore_la-rdf_storage_tstore.Tpo -c -o librdf_storage_tstore_la-rdf_storage_tstore.lo `test -f 'rdf_storage_tstore.c' || echo '$(srcdir)/'`rdf_storage_tstore.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/librdf_storage_tstore_la-rdf_storage_tstore.Tpo $(DEPDIR)/librdf_storage_tstore_la-rdf_storage_tstore.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdf_storage_tstore.c' object='librdf_storage_tstore_la-rdf_storage_tstore.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_tstore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o librdf_storage_tstore_la-rdf_storage_tstore.lo `test -f 'rdf_storage_tstore.c' || echo '$(srcdir)/'`rdf_storage_tstore.c

librdf_storage_virtuoso_la-rdf_storage_virtuoso.lo: rdf_storage_virtuoso.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_virtuoso_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT librdf_storage_virtuoso_la-rdf_storage_virtuoso.lo -MD -MP -MF $(DEPDIR)/librdf_storage_virtuoso_la-rdf_storage_virtuoso.Tpo -c -o librdf_storage_virtuoso_la-rdf_storage_virtuoso.lo `test -f 'rdf_storage_virtuoso.c' || echo '$(srcdir)/'`rdf_storage_virtuoso.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/librdf_storage_virtuoso_la-rdf_storage_virtuoso.Tpo $(DEPDIR)/librdf_storage_virtuoso_la-rdf_storage_virtuoso.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdf_storage_virtuoso.c' object='librdf_storage_virtuoso_la-rdf_storage_virtuoso.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_virtuoso_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o librdf_storage_virtuoso_la-rdf_storage_virtuoso.lo `test -f 'rdf_storage_virtuoso.c' || echo '$(srcdir)/'`rdf_storage_virtuoso.c

librdf_storage_virtuoso_la-rdf_query_virtuoso.lo: rdf_query_virtuoso.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_virtuoso_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT librdf_storage_virtuoso_la-rdf_query_virtuoso.lo -MD -MP -MF $(DEPDIR)/librdf_storage_virtuoso_la-rdf_query_virtuoso.Tpo -c -o librdf_storage_virtuoso_la-rdf_query_virtuoso.lo `test -f 'rdf_query_virtuoso.c' || echo '$(srcdir)/'`rdf_query_virtuoso.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/librdf_storage_virtuoso_la-rdf_query_virtuoso.Tpo $(DEPDIR)/librdf_storage_virtuoso_la-rdf_query_virtuoso.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdf_query_virtuoso.c' object='librdf_storage_virtuoso_la-rdf_query_virtuoso.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdf_storage_virtuoso_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o librdf_storage_virtuoso_la-rdf_query_virtuoso.lo `test -f 'rdf_query_virtuoso.c' || echo '$(srcdir)/'`rdf_query_virtuoso.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) rdf_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) rdf_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) rdf_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) rdf_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS) rdf_config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-pluginLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-pkgdataDATA \
	install-pluginLTLIBRARIES

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgdataDATA uninstall-pluginLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am check-local clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-pluginLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgdataDATA install-pluginLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgdataDATA uninstall-pluginLTLIBRARIES


# Rules to construct test programs

check-local: $(local_tests) run-local-tests

run-local-tests: rdf_storage_sql_test$(EXEEXT)
	@tests="rdf_storage_sql_test"; \
	status=0; \
	for tst in $$tests; do \
	  if test -f ./$$tst; then dir=./; \
	  elif test -f $$tst; then dir=; \
	  else dir="$(top_srcdir)/"; fi; \
	  if $${dir}$$tst $(srcdir); then \
	    echo "PASS: $$tst"; \
	  else \
	    echo "FAIL: $$tst"; \
	    status=1; \
	    break; \
	  fi; \
	done; \
	exit $$status

# Some people need a little help ;-)
test: check

rdf_node_test: rdf_node.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_node.c librdf.la

rdf_digest_test: rdf_digest.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_digest.c librdf.la

rdf_hash_test: rdf_hash.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_hash.c librdf.la

rdf_uri_test: rdf_uri.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_uri.c librdf.la

rdf_statement_test: rdf_statement.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_statement.c @LIBRDF_DIRECT_LIBS@ librdf.la

rdf_model_test: rdf_model.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_model.c @LIBRDF_DIRECT_LIBS@ librdf.la

rdf_storage_test: rdf_storage.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_storage.c librdf.la

rdf_parser_test: rdf_parser.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_parser.c @LIBRDF_DIRECT_LIBS@ librdf.la

rdf_files_test: rdf_files.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_files.c librdf.la

rdf_heuristics_test: rdf_heuristics.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_heuristics.c librdf.la

rdf_utf8_test: rdf_utf8.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_utf8.c librdf.la

rdf_concepts_test: rdf_concepts.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_concepts.c librdf.la

rdf_query_test: rdf_query.c rdf_query_results.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_query.c $(srcdir)/rdf_query_results.c @LIBRDF_DIRECT_LIBS@ librdf.la

rdf_serializer_test: rdf_serializer.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_serializer.c librdf.la

rdf_stream_test: rdf_stream.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_stream.c librdf.la

rdf_iterator_test: rdf_iterator.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_iterator.c librdf.la

rdf_init_test: rdf_init.c librdf.la
	$(COMPILE_LINK) -DSTANDALONE $(srcdir)/rdf_init.c @LIBRDF_DIRECT_LIBS@ librdf.la

@SET_MAKE@

${top_build_prefix}libltdl/libltdlc.la:
	cd  ${top_build_prefix}libltdl && $(MAKE) libltdlc.la

# Run Clang static analyzer over sources.
@MAINTAINER_MODE_TRUE@analyze: $(SOURCES)
@MAINTAINER_MODE_TRUE@	@list='$(SOURCES)'; \
@MAINTAINER_MODE_TRUE@	result=0; \
@MAINTAINER_MODE_TRUE@	for file in $$list; do \
@MAINTAINER_MODE_TRUE@	  if echo $$file | grep '\.c$$' >/dev/null 2>&1; then \
@MAINTAINER_MODE_TRUE@	    $(RECHO) "Analyzing $$file"; \
@MAINTAINER_MODE_TRUE@	    $(ANALYZE_COMMAND) $(srcdir)/$$file; \
@MAINTAINER_MODE_TRUE@	    status=$$?; \
@MAINTAINER_MODE_TRUE@	    if test $$status != 0; then \
@MAINTAINER_MODE_TRUE@	      result=1; \
@MAINTAINER_MODE_TRUE@	    fi; \
@MAINTAINER_MODE_TRUE@	  fi; \
@MAINTAINER_MODE_TRUE@	done; \
@MAINTAINER_MODE_TRUE@	set -e; exit $$result

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
