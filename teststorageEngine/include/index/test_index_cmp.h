extern int rid;
extern int THREAD_RID;
extern int INDEX_ID;
extern int my_compare_str(const char *str1, size_t len1, const char *str2, size_t len2);

bool test_indexscan_LargeMount();
/************************************************************************** 
* @test_indexscan_LargeMount
*扫描大量数据，进行字符串比较并确认数据正确
*比较的策略为前三个字符比123小，紧接着两个字符比45大
*输入的数据为100000至150000，预期输出100460至100999,101460至101999以此类推
* Detailed description.
**************************************************************************/

bool test_indexscan_NumberCmp();
/************************************************************************** 
* @ test_indexscan_NumberCmp
*大量数值数据，index检索比较,int内存区中的数据直接拷入char内存区,
*前后2个字符分别作为key，通过检测是否与索引检索出的数据相等的比较策略比较
*输入的数据为100000至150000，预期的查询出的数据为123456。
* Detailed description.
**************************************************************************/

bool test_indexscan_OneCol_MultMethod();
/************************************************************************** 
* @test_indexscan_OneCol_MultMethod
*扫描大量数据，进行字符串比较并确认数据正确
*在一列上建立多个索引策略,策略为前三个字符大于123，并且小于134
*输入数据为100000至150000，预期输出数字为124000至133999
* Detailed description.
**************************************************************************/

bool test_indexscan_MultCol_MultMethod();
/************************************************************************** 
* @test_indexscan_MultCol_MultMethod
*扫描大量数据，进行字符串比较并确认数据正确
*在两列上分别建立两个索引策略,策略为前三个字符大于123，
*并且小于134，接着两个字符大于45，小于78
*输入数据为100000至150000，
*预期输出数字为124460至124779,125469至125460以此类推至133779
* Detailed description.
**************************************************************************/

bool test_indexscan_MultCol_Col1OneMethod_Col2MultMethod();
/************************************************************************** 
* @test_indexscan_MultCol_Col1OneMethod_Col2MultMethod
*扫描大量数据，进行字符串比较并确认数据正确
*在两列上建立索引策略,策略为前三个字符等于123,接着的两个字
*符大于23，小于78输入数据为100000至150000预期输出数字为123240至123779"
* Detailed description.
**************************************************************************/

bool test_index_uniqe_01();
/************************************************************************** 
* @test_thread_index_uniqe_01
* 测试唯一索引，向表中插入多行相同的数据，建索引的过程传入 UNIQUE_CHECK_YES
* 进行表唯一检测，报错，会被catch到。
* Detailed description.
**************************************************************************/

bool test_index_uniqe_02();
/************************************************************************** 
* @test_thread_index_uniqe_02
* 测试唯一索引，向表中插入多行相同的数据并建索引，在更新索引的过程中，
* 调用的index_insert传入UNIQUE_CHECK_YES 报错，会被pg_catch住。
* Detailed description.
**************************************************************************/

bool test_index_uniqe_03();
/************************************************************************** 
* @test_index_uniqe_03
* 在一个表中进行多次插入同一条数据，同时更新索引，
* 测试能否正确执行,在这个过程中不检测uniqe，最后index_scan扫描出结果。
* Detailed description.
**************************************************************************/

bool test_index_update_multi();
/************************************************************************** 
* @test_index_update_multi
* 在一个表中进行多次插入一条随机数据，同时更新索引，测试能否正确执行。
* Detailed description.
**************************************************************************/

bool test_debug_001();
bool test_debug_002();
