#include "TestFrame/TestFrame.h"
#include "TestFrameCase/TestFrameCaseDll.h"
#include <iostream>
#define BOOST_TEST_NO_MAIN
#include "test_fram.h"
#include "heap/test_dump_load.h"
#include "heap/test_heap_toast.h"
#include "heap/test_heap_create.h"
#include "heap/test_heap_drop.h"
#include "heap/test_heap_close.h"
#include "heap/test_heap_open.h"
#include "heap/test_heap_select.h"
#include "heap/test_heap_update.h"
#include "heap/test_heap_insert.h"
#include "heap/test_heap_delete.h"
#include "index/createindex.h"
#include "index/testbitmapscan.h"
#include "heap/test_heap_store.h"
#include "heap/createheap.h"
#include "heap/dropheap.h"
#include "DeadLock/deadlock.h"
#include "large_object/large_object.h"

//多进程测试函数MULTI_REGIST_FUNC要在单进程测试函数REGIST_FUNC之前测试
BEGIN_DEBUG(DONOTING)
/*REGCASE(Trans1TestFrameCase)
REGCASE(Trans2TestFrameCase)
REGCASE(Trans3TestFrameCase)
REGCASE(Trans4TestFrameCase)
REGCASE(Trans5TestFrameCase)
REGCASE(Trans6TestFrameCase)
REGCASE(Trans7TestFrameCase)
REGCASE(Trans8TestFrameCase)
REGCASE(Trans9TestFrameCase)
REGCASE(Trans10TestFrameCase)
REGCASE(Trans11TestFrameCase)
REGCASE(Trans12TestFrameCase)
REGCASE(Trans13TestFrameCase)
REGCASE(Trans14TestFrameCase)
REGCASE(Trans15TestFrameCase)
REGCASE(Trans16TestFrameCase)
REGCASE(Trans17TestFrameCase)
REGCASE(Trans18TestFrameCase)
REGCASE(Trans19TestFrameCase)
REGCASE(Trans20TestFrameCase)
REGCASE(Trans21TestFrameCase)
REGCASE(Trans22TestFrameCase)
REGCASE(Trans23TestFrameCase)
REGCASE(Trans24TestFrameCase)
REGCASE(Trans25TestFrameCase)
REGCASE(Trans26TestFrameCase)
REGCASE(Trans27TestFrameCase)
REGCASE(Trans28TestFrameCase)
REGCASE(Trans29TestFrameCase)
REGCASE(Trans30TestFrameCase)*/
//REGCASE(test_LargeObject_Write)
REGCASE(testIndexUpdate_SingleColumn_TestFrame)
REGCASE(testIndexUpdate_MultiColumn_TestFrame)
REGCASE(testIndexInsert_SingleColumn_TestFrame)
REGCASE(testIndexInsert_SameScaKey_TestFrame)
REGCASE(testIndex_Sort_TestFrame)
REGCASE(test_index_transaction_001_TestFrame)
REGCASE(test_index_transaction_002_TestFrame)
REGCASE(test_index_transaction_003_TestFrame)
REGCASE(test_index_transaction_004_TestFrame)
REGCASE(test_index_transaction_005_TestFrame)
REGCASE(test_indexscan_dll_000_TestFrame)
REGCASE(test_indexscan_dll_001_TestFrame)
REGCASE(test_indexscan_dll_002_TestFrame)
REGCASE(test_indexscan_dll_003_TestFrame)
REGCASE(test_indexscan_dll_004_TestFrame)
REGCASE(testIndexUpdate_InAnotherTrans_DLL_TestFrame)
REGCASE(testIndex_InAnotherTrans_TestFrame)
REGCASE(test_indexscan_LargeMount_dll_TestFrame)
REGCASE(test_index_uniqe_01_dll_TestFrame)
REGCASE(test_indexscan_mark_restore_TestFrame)
REGCASE(test_indexMult_SameCol_dll_TestFrame)
REGCASE(test_sequence_index_001_insert_TestFrame)
REGCASE(test_sequence_index_select_TestFrame)
REGCASE(test_sequence_index_insert_TestFrame)
REGCASE(test_sequence_index_002_create_TestFrame)
REGCASE(test_sequence_index_002_select_TestFrame)
REGCASE(test_sequence_index_003_select_TestFrame)
REGCASE(test_sequence_index_001_select_TestFrame)
REGCASE(test_sequence_index_003_create_TestFrame)
REGCASE(test_sequence_index_003_insert_TestFrame)
REGCASE(test_sequence_index_004_select_TestFrame)
REGCASE(test_sequence_index_004_insert_TestFrame)
REGCASE(test_sequence_index_004_create_TestFrame)
REGCASE(test_sequence_index_004_update_TestFrame)
REGCASE(test_sequence_index_005_insert_TestFrame)
REGCASE(test_sequence_index_005_update_01_TestFrame)
REGCASE(test_sequence_index_005_update_03_TestFrame)
REGCASE(test_sequence_index_005_update_04_TestFrame)
REGCASE(test_sequence_index_005_update_02_TestFrame)
REGCASE(test_sequence_index_005_update_05_TestFrame)
REGCASE(test_index_create_insert_dll_000_TestFrame)
REGCASE(TestBitmapScanFrist)
REGCASE(TestBitmapScanSecond)
REGCASE(TestBitmapScanThird)
REGCASE(TestBitmapScanFourth)
REGCASE(TestBitmapScanFifth)
REGCASE(TestBitmapScanSixth)
REGCASE(TestBitmapScanSeventh)
BOOST_AUTO_TEST_SUITE(HEAP)
REGCASE(test_toast_insert)
REGCASE(test_toast_delete)
REGCASE(test_toast_update)
REGCASE(test_dump_load)
REGCASE(test_heap_create)
REGCASE(test_create_multi_heap_one_transaction)
REGCASE(test_heap_drop)
REGCASE(test_heap_close_null_entryset)
REGCASE(test_heap_close_then_insert)
REGCASE(test_heap_open_repeat)
REGCASE(test_heap_open)
REGCASE(test_heap_select_01)
REGCASE(test_heap_select_02)
REGCASE(test_heap_select_03)
REGCASE(test_heap_select_04)
REGCASE(test_heap_update_normal)
REGCASE(test_heap_update_too_many_times)
REGCASE(test_heap_update_too_many_times_ex)
REGCASE(test_heap_update_too_many_times_increment)
REGCASE(test_heap_insert_one_record)
REGCASE(test_heap_insert_multi_records)
REGCASE(test_heap_insert_large_data)
REGCASE(test_heap_insert_with_null_chars)
REGCASE(test_heap_insert_many_records)
REGCASE(test_heap_delete_first_tuple)
REGCASE(test_heap_delete_first_tuple_ex)
REGCASE(test_heap_delete_second_tuple)
REGCASE(test_heap_delete_second_tuple_ex)
REGCASE(test_heap_delete_middle_tuple)
REGCASE(test_heap_delete_middle_tuple_ex)
REGCASE(test_heap_delete_forth_tuple)
REGCASE(test_heap_delete_forth_tuple_ex)
REGCASE(test_heap_delete_the_last_tuple)
REGCASE(test_heap_delete_the_last_tuple_ex)
REGCASE(test_heap_delete_the_last_tuple_ex_1)
REGCASE(test_heap_store)
REGCASE(test_heap_sort)
REGCASE(test_heap_sort_1)
BOOST_AUTO_TEST_SUITE_END()

BOOST_AUTO_TEST_SUITE(TRANS_WITH_ORDER)
REGCASE(test_the_same_heap_operate_create)
REGCASE(test_the_same_heap_operate_insert)
REGCASE(test_the_same_heap_operate_select)
REGCASE(test_the_same_heap_operate_update)
REGCASE(test_the_same_heap_operate_delete)
REGCASE(test_the_same_heap_operate_drop)
BOOST_AUTO_TEST_SUITE_END()

BOOST_AUTO_TEST_SUITE(DATABASE)
REGCASE(test_database_01)
//REGCASE(test_database_02)
BOOST_AUTO_TEST_SUITE_END()

//BOOST_AUTO_TEST_SUITE(PG_STAT)
//REGCASE(test_pgstat_trans1)
//REGCASE(test_pgstat_trans2)
//BOOST_AUTO_TEST_SUITE_END()

BOOST_AUTO_TEST_SUITE(DEAD_LOCK_HARD_EDGE)
REGCASE(deadlock_create_two_heaps)
REGCASE(heap_level_hard_edge_deadlock_1)
REGCASE(heap_level_hard_edge_deadlock_2)
REGCASE(deadlock_drop_two_heaps)
BOOST_AUTO_TEST_SUITE_END()

BOOST_AUTO_TEST_SUITE(DEAD_LOCK_SOFT_EDGE)
REGCASE(deadlock_soft_edge_create_heap)
REGCASE(deadlock_soft_edge_trans1)
REGCASE(deadlock_soft_edge_trans2)
REGCASE(deadlock_soft_edge_trans3)
REGCASE(dead_lock_soft_edge_drop_heap)
BOOST_AUTO_TEST_SUITE_END()

/*BOOST_AUTO_TEST_SUITE(DEAD_LOCK_RANDOM_LOCK)
REGCASE(deadlock_create_heaps)
REGCASE(deadlock_drop_heaps)
REGCASE(deadlock_trans1)
REGCASE(deadlock_trans2)
REGCASE(deadlock_trans3)
REGCASE(deadlock_trans4)
REGCASE(deadlock_trans5)
REGCASE(deadlock_trans6)
REGCASE(deadlock_trans7)
REGCASE(deadlock_trans8)
REGCASE(deadlock_trans9)
REGCASE(deadlock_trans10)
BOOST_AUTO_TEST_SUITE_END()*/


REGCASE(test_trans_index_DeleteRollback_TestFrame)
END_DEBUG(DONOTING)
